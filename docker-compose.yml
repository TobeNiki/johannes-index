version: '3'

services:
  go:
    #image: 257225946306.dkr.ecr.ap-northeast-1.amazonaws.com/fargatetestdoc:latest
    container_name: goc
    build: 
      context: .
      dockerfile: Dockerfile.go
    tty: true
    ports:
      - 8080:8080
    depends_on:
      - db
      - es
    volumes:
      - type: bind
        source: .
        target: /backend
    networks:
      - golang_network

  db:
    #image: 257225946306.dkr.ecr.ap-northeast-1.amazonaws.com/fargatetestdoc:latest
    container_name: db
    platform: linux/amd64
    build: 
      context: .
      dockerfile: Dockerfile.db
    tty: true
    ports:
      - 3306:3306
    env_file:
      - ./mysql/.env
    volumes:
      - type: volume
        source: mysql_volume
        target: /var/lib/mysql
      - type: bind
        source: ./mysql/init
        target: /docker-entrypoint-initdb.d
    networks:
      - golang_network
      
  es:
    #image: 257225946306.dkr.ecr.ap-northeast-1.amazonaws.com/fargatetestdoc:latest
    container_name: es
    build: 
      context: .
      dockerfile: Dockerfile.elastic
    tty: true
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - golang_network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    volumes:
      - type: bind
        source: ./nginx
        target: /nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - go
    networks:
      - golang_network

volumes:
  mysql_volume:
    name: mysql_volume
  es-data:
    name: es-data
    driver: local

networks:
  golang_network:
    external: true